{
  "resolvedId": "/Users/bensonmboci/Desktop/project/portfolio/portfolio/node_modules/@apollo/client/cache/inmemory/reactiveVars.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { dep } from \"optimism\";\nimport { Slot } from \"@wry/context\";\nexport var cacheSlot = new Slot();\nvar cacheInfoMap = new WeakMap();\nfunction getCacheInfo(cache) {\n    var info = cacheInfoMap.get(cache);\n    if (!info) {\n        cacheInfoMap.set(cache, (info = {\n            vars: new Set(),\n            dep: dep(),\n        }));\n    }\n    return info;\n}\nexport function forgetCache(cache) {\n    getCacheInfo(cache).vars.forEach(function (rv) { return rv.forgetCache(cache); });\n}\nexport function recallCache(cache) {\n    getCacheInfo(cache).vars.forEach(function (rv) { return rv.attachCache(cache); });\n}\nexport function makeVar(value) {\n    var caches = new Set();\n    var listeners = new Set();\n    var rv = function (newValue) {\n        if (arguments.length > 0) {\n            if (value !== newValue) {\n                value = newValue;\n                caches.forEach(function (cache) {\n                    getCacheInfo(cache).dep.dirty(rv);\n                    broadcast(cache);\n                });\n                var oldListeners = Array.from(listeners);\n                listeners.clear();\n                oldListeners.forEach(function (listener) { return listener(value); });\n            }\n        }\n        else {\n            var cache = cacheSlot.getValue();\n            if (cache) {\n                attach(cache);\n                getCacheInfo(cache).dep(rv);\n            }\n        }\n        return value;\n    };\n    rv.onNextChange = function (listener) {\n        listeners.add(listener);\n        return function () {\n            listeners.delete(listener);\n        };\n    };\n    var attach = (rv.attachCache = function (cache) {\n        caches.add(cache);\n        getCacheInfo(cache).vars.add(rv);\n        return rv;\n    });\n    rv.forgetCache = function (cache) { return caches.delete(cache); };\n    return rv;\n}\nfunction broadcast(cache) {\n    if (cache.broadcastWatches) {\n        cache.broadcastWatches();\n    }\n}\n//# sourceMappingURL=reactiveVars.js.map",
      "start": 1700234747044,
      "end": 1700234747101,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700234747102,
      "end": 1700234747102,
      "order": "normal"
    }
  ]
}
