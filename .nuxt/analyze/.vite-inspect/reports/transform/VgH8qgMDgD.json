{
  "resolvedId": "/Users/bensonmboci/Desktop/project/portfolio/portfolio/node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nexport function UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || invariant(false);\n        knownNames = prevKnownNames;\n      },\n    },\n\n    ObjectField(node) {\n      const fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one input field named \"${fieldName}\".`,\n            {\n              nodes: [knownNames[fieldName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    },\n  };\n}\n",
      "start": 1700234743468,
      "end": 1700234743509,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700234743509,
      "end": 1700234743509,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700234743509,
      "end": 1700234743509,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1700234743509,
      "end": 1700234743509,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700234743509,
      "end": 1700234743509,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700234743509,
      "end": 1700234743509,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700234743510,
      "end": 1700234743510,
      "order": "normal"
    }
  ]
}
