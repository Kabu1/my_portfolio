{
  "resolvedId": "/Users/bensonmboci/Desktop/project/portfolio/portfolio/node_modules/@apollo/client/utilities/observables/Concast.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { __extends } from \"tslib\";\nimport { Observable } from \"./Observable.js\";\nimport { iterateObserversSafely } from \"./iteration.js\";\nimport { fixObservableSubclass } from \"./subclassing.js\";\nfunction isPromiseLike(value) {\n    return value && typeof value.then === \"function\";\n}\nvar Concast = (function (_super) {\n    __extends(Concast, _super);\n    function Concast(sources) {\n        var _this = _super.call(this, function (observer) {\n            _this.addObserver(observer);\n            return function () { return _this.removeObserver(observer); };\n        }) || this;\n        _this.observers = new Set();\n        _this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        _this.handlers = {\n            next: function (result) {\n                if (_this.sub !== null) {\n                    _this.latest = [\"next\", result];\n                    _this.notify(\"next\", result);\n                    iterateObserversSafely(_this.observers, \"next\", result);\n                }\n            },\n            error: function (error) {\n                var sub = _this.sub;\n                if (sub !== null) {\n                    if (sub)\n                        setTimeout(function () { return sub.unsubscribe(); });\n                    _this.sub = null;\n                    _this.latest = [\"error\", error];\n                    _this.reject(error);\n                    _this.notify(\"error\", error);\n                    iterateObserversSafely(_this.observers, \"error\", error);\n                }\n            },\n            complete: function () {\n                var _a = _this, sub = _a.sub, _b = _a.sources, sources = _b === void 0 ? [] : _b;\n                if (sub !== null) {\n                    var value = sources.shift();\n                    if (!value) {\n                        if (sub)\n                            setTimeout(function () { return sub.unsubscribe(); });\n                        _this.sub = null;\n                        if (_this.latest && _this.latest[0] === \"next\") {\n                            _this.resolve(_this.latest[1]);\n                        }\n                        else {\n                            _this.resolve();\n                        }\n                        _this.notify(\"complete\");\n                        iterateObserversSafely(_this.observers, \"complete\");\n                    }\n                    else if (isPromiseLike(value)) {\n                        value.then(function (obs) { return (_this.sub = obs.subscribe(_this.handlers)); });\n                    }\n                    else {\n                        _this.sub = value.subscribe(_this.handlers);\n                    }\n                }\n            },\n        };\n        _this.nextResultListeners = new Set();\n        _this.cancel = function (reason) {\n            _this.reject(reason);\n            _this.sources = [];\n            _this.handlers.complete();\n        };\n        _this.promise.catch(function (_) { });\n        if (typeof sources === \"function\") {\n            sources = [new Observable(sources)];\n        }\n        if (isPromiseLike(sources)) {\n            sources.then(function (iterable) { return _this.start(iterable); }, _this.handlers.error);\n        }\n        else {\n            _this.start(sources);\n        }\n        return _this;\n    }\n    Concast.prototype.start = function (sources) {\n        if (this.sub !== void 0)\n            return;\n        this.sources = Array.from(sources);\n        this.handlers.complete();\n    };\n    Concast.prototype.deliverLastMessage = function (observer) {\n        if (this.latest) {\n            var nextOrError = this.latest[0];\n            var method = observer[nextOrError];\n            if (method) {\n                method.call(observer, this.latest[1]);\n            }\n            if (this.sub === null && nextOrError === \"next\" && observer.complete) {\n                observer.complete();\n            }\n        }\n    };\n    Concast.prototype.addObserver = function (observer) {\n        if (!this.observers.has(observer)) {\n            this.deliverLastMessage(observer);\n            this.observers.add(observer);\n        }\n    };\n    Concast.prototype.removeObserver = function (observer) {\n        if (this.observers.delete(observer) && this.observers.size < 1) {\n            this.handlers.complete();\n        }\n    };\n    Concast.prototype.notify = function (method, arg) {\n        var nextResultListeners = this.nextResultListeners;\n        if (nextResultListeners.size) {\n            this.nextResultListeners = new Set();\n            nextResultListeners.forEach(function (listener) { return listener(method, arg); });\n        }\n    };\n    Concast.prototype.beforeNext = function (callback) {\n        var called = false;\n        this.nextResultListeners.add(function (method, arg) {\n            if (!called) {\n                called = true;\n                callback(method, arg);\n            }\n        });\n    };\n    return Concast;\n}(Observable));\nexport { Concast };\nfixObservableSubclass(Concast);\n//# sourceMappingURL=Concast.js.map",
      "start": 1700234742422,
      "end": 1700234742475,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700234742475,
      "end": 1700234742475,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700234742475,
      "end": 1700234742476,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700234742476,
      "end": 1700234742476,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700234742477,
      "end": 1700234742477,
      "order": "normal"
    }
  ]
}
